{"ast":null,"code":"// src/loadScript.ts\nvar NO_DOCUMENT_ERROR = \"loadScript cannot be called when document does not exist\";\nvar NO_SRC_ERROR = \"loadScript cannot be called without a src\";\nasync function loadScript() {\n  let src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let opts = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    async,\n    defer,\n    beforeLoad,\n    crossOrigin\n  } = opts || {};\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(NO_SRC_ERROR);\n    }\n    if (!document || !document.body) {\n      reject(NO_DOCUMENT_ERROR);\n    }\n    const script = document.createElement(\"script\");\n    crossOrigin && script.setAttribute(\"crossorigin\", crossOrigin);\n    script.async = async || false;\n    script.defer = defer || false;\n    script.addEventListener(\"load\", () => {\n      script.remove();\n      resolve(script);\n    });\n    script.addEventListener(\"error\", () => {\n      script.remove();\n      reject();\n    });\n    script.src = src;\n    beforeLoad == null ? void 0 : beforeLoad(script);\n    document.body.appendChild(script);\n  });\n}\nexport { loadScript };","map":{"version":3,"mappings":";AAAA,IAAMA,oBAAoB;AAC1B,IAAMC,eAAe;AASrB,eAAsBC,aAA0E;EAAA,IAA/DC,0EAAM;EAAA,IAAIC;EACzC,MAAM;IAAEC;IAAOC;IAAOC;IAAYC;EAAY,IAAIJ,QAAQ,CAAC;EAC3D,OAAO,IAAIK,QAAQ,CAACC,SAASC,WAAW;IACtC,IAAI,CAACR,KAAK;MACRQ,OAAOV,YAAY;IACrB;IAEA,IAAI,CAACW,YAAY,CAACA,SAASC,MAAM;MAC/BF,OAAOX,iBAAiB;IAC1B;IAEA,MAAMc,SAASF,SAASG,cAAc,QAAQ;IAE9CP,eAAeM,OAAOE,aAAa,eAAeR,WAAW;IAC7DM,OAAOT,QAAQA,SAAS;IACxBS,OAAOR,QAAQA,SAAS;IAExBQ,OAAOG,iBAAiB,QAAQ,MAAM;MACpCH,OAAOI,QAAO;MACdR,QAAQI,MAAM;IAChB,CAAC;IAEDA,OAAOG,iBAAiB,SAAS,MAAM;MACrCH,OAAOI,QAAO;MACdP,QAAO;IACT,CAAC;IAEDG,OAAOX,MAAMA;IACbI,yCAAaO;IACbF,SAASC,KAAKM,YAAYL,MAAM;EAClC,CAAC;AACH","names":["NO_DOCUMENT_ERROR","NO_SRC_ERROR","loadScript","src","opts","async","defer","beforeLoad","crossOrigin","Promise","resolve","reject","document","body","script","createElement","setAttribute","addEventListener","remove","appendChild"],"sources":["/home/vanistelrooy/Downloads/Expense-Tracker-Application-master/frontend/node_modules/@clerk/shared/src/loadScript.ts"],"sourcesContent":["const NO_DOCUMENT_ERROR = 'loadScript cannot be called when document does not exist';\nconst NO_SRC_ERROR = 'loadScript cannot be called without a src';\n\ntype LoadScriptOptions = {\n  async?: boolean;\n  defer?: boolean;\n  crossOrigin?: 'anonymous' | 'use-credentials';\n  beforeLoad?: (script: HTMLScriptElement) => void;\n};\n\nexport async function loadScript(src = '', opts: LoadScriptOptions): Promise<HTMLScriptElement> {\n  const { async, defer, beforeLoad, crossOrigin } = opts || {};\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(NO_SRC_ERROR);\n    }\n\n    if (!document || !document.body) {\n      reject(NO_DOCUMENT_ERROR);\n    }\n\n    const script = document.createElement('script');\n\n    crossOrigin && script.setAttribute('crossorigin', crossOrigin);\n    script.async = async || false;\n    script.defer = defer || false;\n\n    script.addEventListener('load', () => {\n      script.remove();\n      resolve(script);\n    });\n\n    script.addEventListener('error', () => {\n      script.remove();\n      reject();\n    });\n\n    script.src = src;\n    beforeLoad?.(script);\n    document.body.appendChild(script);\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}